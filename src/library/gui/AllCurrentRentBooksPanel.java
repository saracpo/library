/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library.gui;

import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import library.model.Member;
import library.model.MemberDAO;
import library.model.RentBook;

/**
 *
 * @author Nebojsa
 */
public class AllCurrentRentBooksPanel extends javax.swing.JPanel {

    /**
     * Creates new form AllCurrentRentBooksPanel
     */
    public AllCurrentRentBooksPanel() {
        initComponents();
        SwingWorker sw = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                MemberDAO memberDao = MemberDAO.getInstance();
                List<Member> members = memberDao.getAllMembersRentBooks();
                return members;
            }

            @Override
            protected void done() {
                try {
                    List<Member> res = (List<Member>)get();
                    DefaultTableModel dtm = (DefaultTableModel)jTable1.getModel();
                    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd.MM.yyyy.");
                    for (Member m : res) {
                        dtm.addRow(new Object[]{
                            m.rentBooks.get(0).book.id, m.rentBooks.get(0).book.title, m.id, m.name, m.rentBooks.get(0).rentDate.format(dtf), m.rentBooks.get(0).returnDate.format(dtf)
                        });
                    }
                } catch (InterruptedException | ExecutionException ex) {
                    Logger.getLogger(AllCurrentRentBooksPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        };
        sw.execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbReturn = new javax.swing.JButton();
        jbExtend = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SVE TRENUTNO IZNAJMLJENE KNJIGE");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID knjige", "Naslov", "Br. čl. karte", "Ime i prezime člana", "Uzeto", "Rok"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(160);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(80);
        }

        jbReturn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jbReturn.setText("VRATI KNJIGU");
        jbReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbReturnActionPerformed(evt);
            }
        });

        jbExtend.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jbExtend.setText("PRODUŽI ROK");
        jbExtend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExtendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbExtend, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExtend))
                .addGap(56, 56, 56))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbReturnActionPerformed
        if(jTable1.getSelectedRowCount()==0) {
            JOptionPane.showConfirmDialog(this, "Niste ništa obeležili!", "Greška!!!", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                int row = jTable1.getSelectedRow();
                int book_id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
                MemberDAO memberDao = MemberDAO.getInstance();
                Member m = memberDao.getMember(Integer.parseInt(dtm.getValueAt(row, 2).toString()));
                m.rentBooks = memberDao.getRentBooksByMember(m.id);
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd.MM.yyyy.");
                RentBook rb = new RentBook(memberDao.getBook(book_id), LocalDate.parse(dtm.getValueAt(row, 4).toString(), dtf), LocalDate.parse(dtm.getValueAt(row, 5).toString(), dtf), LocalDate.now(),0);
                if(rb.dateOfReturn.isAfter(rb.returnDate)) {
                    rb.finePerBook=ChronoUnit.DAYS.between(rb.returnDate, rb.dateOfReturn)*20;
                } else {
                    rb.finePerBook=0;
                }
                MainForm.mainForm.changeContent(new ReturnBookPanel(m, rb));
            } catch (SQLException ex) {
                Logger.getLogger(BooksByMemberPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jbReturnActionPerformed

    private void jbExtendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExtendActionPerformed
        if(jTable1.getSelectedRowCount()==0) {
            JOptionPane.showConfirmDialog(this, "Niste ništa obeležili!", "Greška!!!", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                DefaultTableModel dtm = (DefaultTableModel)jTable1.getModel();
                int row = jTable1.getSelectedRow();
                int book_id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
                MemberDAO memberDao = MemberDAO.getInstance();
                Member m = memberDao.getMember(Integer.parseInt(dtm.getValueAt(row, 2).toString()));
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd.MM.yyyy.");
                RentBook rb = new RentBook(memberDao.getBook(book_id), LocalDate.parse(dtm.getValueAt(row, 4).toString(), dtf), LocalDate.parse(dtm.getValueAt(row, 5).toString(), dtf),null,0);
                if(rb.returnDate.isBefore(LocalDate.now())){
                    JOptionPane.showMessageDialog(this, "Kasno je za produžetak roka!", "Greška!!!", JOptionPane.ERROR_MESSAGE);
                } else {
                    MainForm.mainForm.changeContent(new ExtendBookPanel(m, rb));
                }

            } catch (SQLException ex) {
                Logger.getLogger(BooksByMemberPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jbExtendActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbExtend;
    private javax.swing.JButton jbReturn;
    // End of variables declaration//GEN-END:variables
}
