/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library.gui;

import java.sql.SQLException;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import library.model.Genre;
import library.model.GenreDAO;

/**
 *
 * @author Nebojsa
 */
public class AllGenresPanel extends javax.swing.JPanel {

    /**
     * Creates new form AllGenresPanel
     */
    public AllGenresPanel() {
        initComponents();
        SwingWorker sw = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                GenreDAO genreDao = GenreDAO.getInstance();
                List<Genre> allGenres = genreDao.getAllGenres();
                return allGenres;
            }

            @Override
            protected void done() {
                try {
                    List<Genre> res = (List<Genre>)get();
                    DefaultTableModel dtm = (DefaultTableModel)jTable1.getModel();
                    for (Genre g : res) {
                        dtm.addRow(new Object[]{
                            g.id, g.name
                        });
                    }
                } catch (InterruptedException | ExecutionException ex) {
                    Logger.getLogger(AllGenresPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }      
        };
        sw.execute();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbEdit = new javax.swing.JButton();
        jbDelete = new javax.swing.JButton();
        tfAddGenre = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SVI ŽANROVI");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Žanr"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(250);
        }

        jbEdit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbEdit.setText("IZMENI");
        jbEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditActionPerformed(evt);
            }
        });

        jbDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbDelete.setText("OBRIŠI");
        jbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteActionPerformed(evt);
            }
        });

        tfAddGenre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfAddGenre.setText("DODAJ");
        tfAddGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAddGenreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(tfAddGenre, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jbEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jbDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEdit)
                    .addComponent(jbDelete)
                    .addComponent(tfAddGenre))
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditActionPerformed
        DefaultTableModel dtm = (DefaultTableModel)jTable1.getModel();
        if(jTable1.getSelectedRowCount()==0) {
            JOptionPane.showMessageDialog(this, "Nije ništa obeleženo!", "Greška!!!", JOptionPane.ERROR_MESSAGE);
        } else {            
                int row = jTable1.getSelectedRow();
                int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            try {
                MainForm.mainForm.changeContent(new EditGenrePanel(id));
            } catch (SQLException ex) {
                Logger.getLogger(AllGenresPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }//GEN-LAST:event_jbEditActionPerformed

    private void jbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteActionPerformed
        if(jTable1.getSelectedRowCount()==0) {
            JOptionPane.showMessageDialog(this, "Nije ništa obeleženo!", "Greška!!!", JOptionPane.ERROR_MESSAGE);
        } else {
            int row = jTable1.getSelectedRow();
            DefaultTableModel dtm = (DefaultTableModel)jTable1.getModel();
            int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            int res = JOptionPane.showConfirmDialog(this, "Da li ste sigurni?", "Brisanje", JOptionPane.YES_NO_OPTION);
            
            if(res == JOptionPane.YES_OPTION) {
                try {
                    GenreDAO genreDao = GenreDAO.getInstance();
                    genreDao.deleteGenre(id);
                    dtm.removeRow(row);
                } catch (SQLException ex) {
                    Logger.getLogger(AllGenresPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        }
    }//GEN-LAST:event_jbDeleteActionPerformed

    private void tfAddGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAddGenreActionPerformed
        MainForm.mainForm.changeContent(new AddGenrePanel());
    }//GEN-LAST:event_tfAddGenreActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbDelete;
    private javax.swing.JButton jbEdit;
    private javax.swing.JButton tfAddGenre;
    // End of variables declaration//GEN-END:variables
}
